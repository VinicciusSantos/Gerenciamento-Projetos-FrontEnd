{"ast":null,"code":"import React__default, { memo, createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar MONTHS = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December'\n};\n\nvar getMonthNameFromNumber = function getMonthNameFromNumber(month) {\n  if (month < 0 || month > 11) {\n    throw new Error(\"Invalid month number: \" + month);\n  }\n\n  return MONTHS[month];\n};\n\nvar getDatesOfMonth = function getDatesOfMonth(date) {\n  // generate dates of each week of the month including the residue dates\n  // of the last week of previous month and first week of next month\n  var firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  var lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  var firstDayOfMonthWeekDay = firstDayOfMonth.getDay();\n  var lastDayOfMonthWeekDay = lastDayOfMonth.getDay();\n  var previousMonth = new Date(date.getFullYear(), date.getMonth(), 0);\n  var previousMonthLastDay = new Date(previousMonth.getFullYear(), previousMonth.getMonth() + 1, 0);\n  var nextMonth = new Date(date.getFullYear(), date.getMonth() + 2, 0);\n  var dates = [];\n\n  for (var i = 0; i < firstDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(previousMonth.getFullYear(), previousMonth.getMonth(), previousMonthLastDay.getDate() - firstDayOfMonthWeekDay + i + 1),\n      active: false\n    });\n  }\n\n  for (var _i = 0; _i < lastDayOfMonth.getDate(); _i++) {\n    dates.push({\n      d: new Date(date.getFullYear(), date.getMonth(), _i + 1),\n      active: true\n    });\n  }\n\n  for (var _i2 = 0; _i2 < 6 - lastDayOfMonthWeekDay; _i2++) {\n    dates.push({\n      d: new Date(nextMonth.getFullYear(), nextMonth.getMonth(), _i2 + 1),\n      active: false\n    });\n  }\n\n  return dates;\n};\n\nvar MonthPicker = function MonthPicker(_ref) {\n  var month = _ref.month,\n      year = _ref.year,\n      nextMonth = _ref.nextMonth,\n      prevMonth = _ref.prevMonth;\n  return React__default.createElement(\"div\", {\n    className: \"sdp--month-picker\"\n  }, React__default.createElement(\"button\", {\n    className: \"sdp--square-btn sdp--square-btn__shadowed\",\n    onClick: prevMonth,\n    \"aria-label\": \"Go to previous month\",\n    type: \"button\"\n  }, React__default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 256 256\"\n  }, React__default.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), React__default.createElement(\"polyline\", {\n    points: \"160 208 80 128 160 48\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }))), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--month-name\",\n    \"aria-label\": getMonthNameFromNumber(month) + \" \" + year + \" is currently open in Date Picker\",\n    tabIndex: 0\n  }, getMonthNameFromNumber(month), \" \", year), React__default.createElement(\"button\", {\n    className: \"sdp--square-btn sdp--square-btn__shadowed\",\n    onClick: nextMonth,\n    \"aria-label\": \"Go to next month\",\n    type: \"button\"\n  }, React__default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 256 256\"\n  }, React__default.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), React__default.createElement(\"polyline\", {\n    points: \"96 48 176 128 96 208\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }))));\n};\n\nvar dateOptions = {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric'\n};\n\nvar DateButton = function DateButton(_ref) {\n  var date = _ref.date,\n      active = _ref.active,\n      _onClick = _ref.onClick,\n      selected = _ref.selected;\n  return createElement(\"button\", {\n    className: \"sdp--square-btn sdp--date-btn \" + (selected ? 'sdp--date-btn__selected' : '') + \" sdp--text \" + (!active ? 'sdp--text__inactive' : ''),\n    onClick: function onClick() {\n      return _onClick(date);\n    },\n    tabIndex: active ? 0 : -1,\n    \"aria-label\": (selected ? 'Currently selected' : 'Select') + \" \" + date.toLocaleDateString('en-US', dateOptions),\n    type: \"button\"\n  }, date.getDate());\n};\n\nvar DateButton$1 = /*#__PURE__*/memo(DateButton, function (p, n) {\n  return p.date.getDay() === n.date.getDay() && p.active === n.active && p.selected === n.selected;\n});\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".sdp{background-color:#fff;border:none;border-radius:.5rem;box-shadow:var(--shadow);padding:.75rem;width:16rem}.sdp--month-name:focus,.sdp--square-btn:focus,.sdp:focus{box-shadow:0 0 0 2px #60a5fab3;outline:none}.sdp--month-name{border:none;border-radius:.5rem;padding:.5rem}.sdp--text{font-family:var(--font);font-weight:500;margin:0}.sdp--text__inactive{color:var(--disabled-color);pointer-events:none}.sdp--square-btn{align-items:center;background-color:#fff;border:none;border-radius:.5rem;cursor:pointer;display:flex;font-family:var(--font);height:1.8rem;justify-content:center;transition:all .2s ease-in-out;width:1.8rem}.sdp--square-btn:focus:hover{box-shadow:none}.sdp--square-btn__shadowed,.sdp--square-btn__shadowed:focus:hover{box-shadow:var(--shadow)}.sdp--date-btn__selected{background-color:var(--theme-color);box-shadow:var(--shadow);color:var(--selected-date-color)}.sdp--date-btn__selected.sdp--square-btn:focus{box-shadow:var(--shadow)}.sdp--month-picker{align-items:center;display:flex;justify-content:space-between}.sdp--dates-grid{display:grid;gap:4px;grid-template-columns:repeat(7,1fr);justify-items:center;margin:.5rem 0 0}.sdp--dates-grid>p.sdp--text{padding:.5rem 0}\";\nstyleInject(css_248z);\nvar _excluded = [\"onChange\", \"selected\", \"minDate\", \"maxDate\", \"className\"];\nvar DatePicker = /*#__PURE__*/React__default.forwardRef(function (_ref, ref) {\n  var onChange = _ref.onChange,\n      _ref$selected = _ref.selected,\n      selected = _ref$selected === void 0 ? new Date() : _ref$selected,\n      _ref$minDate = _ref.minDate,\n      minDate = _ref$minDate === void 0 ? new Date(1900, 0, 1) : _ref$minDate,\n      maxDate = _ref.maxDate,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var minDateVal = minDate.getTime();\n  var maxDateVal = typeof maxDate === 'undefined' ? Number.POSITIVE_INFINITY : maxDate.getTime();\n\n  var _React$useState = React__default.useState(selected),\n      monthDate = _React$useState[0],\n      setMonthDate = _React$useState[1];\n\n  var _React$useState2 = React__default.useState(selected),\n      selectedDate = _React$useState2[0],\n      setSelectedDate = _React$useState2[1];\n\n  var nextMonth = React__default.useCallback(function () {\n    return setMonthDate(function (d) {\n      var m = d.getMonth();\n      var y = d.getFullYear();\n\n      if (m === 11) {\n        return new Date(y + 1, 0);\n      } else {\n        return new Date(y, m + 1);\n      }\n    });\n  }, []);\n  var prevMonth = React__default.useCallback(function () {\n    return setMonthDate(function (d) {\n      var m = d.getMonth();\n      var y = d.getFullYear();\n\n      if (m === 0) {\n        return new Date(y - 1, 11);\n      } else {\n        return new Date(y, m - 1);\n      }\n    });\n  }, []);\n  var setNewSelectedDate = React__default.useCallback(function (date) {\n    setSelectedDate(date);\n    onChange == null ? void 0 : onChange(date);\n  }, [onChange, setSelectedDate]); // TODO: arrow-keys navigation\n\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"sdp \" + (className != null ? className : ''),\n    \"aria-label\": \"Date Picker\",\n    tabIndex: 0,\n    ref: ref\n  }, props), React__default.createElement(MonthPicker, {\n    month: monthDate.getMonth(),\n    year: monthDate.getFullYear(),\n    nextMonth: nextMonth,\n    prevMonth: prevMonth\n  }), React__default.createElement(\"div\", {\n    className: \"sdp--dates-grid\"\n  }, React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Su\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Mo\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Tu\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"We\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Th\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Fr\"), React__default.createElement(\"p\", {\n    className: \"sdp--text sdp--text__inactive\"\n  }, \"Sa\"), getDatesOfMonth(monthDate).map(function (_ref2) {\n    var d = _ref2.d,\n        active = _ref2.active;\n    var dVal = d.getTime();\n    return React__default.createElement(DateButton$1, {\n      key: dVal,\n      date: d,\n      active: dVal >= minDateVal && dVal <= maxDateVal && active,\n      selected: selectedDate.toDateString() === d.toDateString(),\n      onClick: setNewSelectedDate\n    });\n  })));\n});\nDatePicker.displayName = 'DatePicker';\nvar css_248z$1 = \".sdp,.stp{--font:inherit,-apple-system,\\\"Segoe UI\\\",Ubuntu,\\\"Helvetica Neue\\\",sans-serif;--shadow:transparent 0px 0px 0px 0px,transparent 0px 0px 0px 0px,rgba(0,0,0,.1) 0px 1px 3px 0px,rgba(0,0,0,.06) 0px 1px 2px 0px;--shadow-md:transparent 0px 0px 0px 0px,transparent 0px 0px 0px 0px,rgba(0,0,0,.1) 0px 4px 6px -1px,rgba(0,0,0,.06) 0px 2px 4px -1px;--theme-color:#60a5fa;--selected-date-color:#fff;--disabled-color:#bdbdbd}\";\nstyleInject(css_248z$1);\n/**\r\n * Custom Option component.\r\n */\n\nvar CustomOption = function CustomOption(_ref) {\n  var selected = _ref.selected,\n      value = _ref.value,\n      label = _ref.label,\n      _onClick = _ref.onClick,\n      disabled = _ref.disabled;\n  var ref = React__default.useRef(null);\n  React__default.useEffect(function () {\n    if (selected) {\n      var _ref$current;\n\n      (_ref$current = ref.current) == null ? void 0 : _ref$current.scrollIntoView();\n    }\n  }, [selected]);\n  return React__default.createElement(\"button\", {\n    ref: ref,\n    className: \"stp--option \" + (selected ? 'stp--option__active' : '') + \" \" + (disabled ? 'stp--option__disabled' : ''),\n    type: \"button\",\n    onClick: function onClick() {\n      return !disabled && _onClick(value);\n    },\n    key: value\n  }, label);\n};\n/**\r\n * A custom select component.\r\n *\r\n */\n\n\nvar CustomSelect = function CustomSelect(_ref) {\n  var value = _ref.value,\n      options = _ref.options,\n      onChange = _ref.onChange,\n      children = _ref.children;\n  var ref = React__default.useRef(null);\n\n  var _React$useState = React__default.useState(false),\n      isOpen = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var openOptionsDropdown = React__default.useCallback(function () {\n    setIsOpen(true);\n  }, []);\n  var closeOptionsDropdown = React__default.useCallback(function () {\n    setIsOpen(false);\n  }, []);\n  var handleOptionSelect = React__default.useCallback(function (v) {\n    onChange(v);\n    closeOptionsDropdown();\n  }, [onChange, closeOptionsDropdown]);\n  React__default.useEffect(function () {\n    if (React__default.Children.toArray(children).some(function (c) {\n      return typeof c !== 'string';\n    })) {\n      throw new Error('time-picker: CustomSelect children must be strings');\n    }\n  }, [children]);\n  React__default.useEffect(function () {\n    var clickListener = function clickListener(e) {\n      var _ref$current;\n\n      if (!((_ref$current = ref.current) != null && _ref$current.contains(e.target))) {\n        closeOptionsDropdown();\n      }\n    };\n\n    document.addEventListener('click', clickListener);\n    return function () {\n      return document.removeEventListener('click', clickListener);\n    };\n  }, [closeOptionsDropdown]);\n  return React__default.createElement(\"div\", {\n    className: \"stp--select__container\"\n  }, React__default.createElement(\"div\", {\n    ref: ref,\n    className: \"stp--select\",\n    tabIndex: 0,\n    onClick: openOptionsDropdown,\n    onFocus: openOptionsDropdown\n  }, value), isOpen && React__default.createElement(\"div\", {\n    className: \"stp--select__dropdown\"\n  }, options.map(function (_ref2) {\n    var _ref2$value = _ref2.value,\n        v = _ref2$value[0],\n        label = _ref2$value[1],\n        disabled = _ref2.disabled;\n    return React__default.createElement(CustomOption, {\n      key: v,\n      selected: v === value,\n      value: v,\n      label: label,\n      onClick: handleOptionSelect,\n      disabled: disabled\n    });\n  })));\n};\n\nvar css_248z$2 = \".stp{border:none;border-radius:.5rem;box-shadow:var(--shadow);display:inline-flex;font-family:var(--font);padding:.5rem}.stp,.stp *{outline:none}.stp:focus,.stp :focus{box-shadow:0 0 0 2px #60a5fab3}.stp>p{display:inline;margin:0 4px}.stp--select{border:none;border-radius:.25rem;display:inline;padding:.1rem .4rem}.stp--select__container{position:relative}.stp--select__dropdown{background-color:#fff;border:none;border-radius:.5rem;box-shadow:var(--shadow);display:flex;flex-direction:column;max-height:30vh;overflow:auto;padding:.4rem;position:absolute;scrollbar-width:none;z-index:2}.stp--select__dropdown::-webkit-scrollbar{display:none}.stp--option,.stp--select{font-family:var(--font);font-size:1rem;font-weight:500}.stp--option__disabled{color:var(--disabled-color);pointer-events:none}.stp--select:hover{cursor:context-menu}.stp--option{background-color:#fff;border:none;border-radius:.25rem;cursor:pointer;margin-top:.25rem;padding:.25rem .4rem;transition:all .1s ease}.stp--option:first-of-type{margin-top:0}.stp--option:hover,.stp--option__active{background-color:var(--theme-color);color:var(--selected-date-color)}.stp--option__active{box-shadow:var(--shadow)}\";\nstyleInject(css_248z$2);\nvar _excluded$1 = [\"onChange\", \"selected\", \"minTime\", \"maxTime\", \"minutesInterval\", \"className\"];\n/**\r\n *\r\n * @param time {Time} The time value\r\n * @param interval {number} The interval between each minute select option\r\n * @returns {Time} Time value rounded to the nearest interval\r\n */\n\nvar alignTime = function alignTime(_ref, interval, lower) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes;\n\n  if (lower === void 0) {\n    lower = true;\n  } // round minutes to nearest interval\n\n\n  if (minutes % interval !== 0) {\n    minutes = lower ? minutes - minutes % interval : minutes + minutes % interval;\n  }\n\n  return {\n    hours: hours,\n    minutes: minutes\n  };\n};\n\nvar isMinuteOptionDisabled = function isMinuteOptionDisabled(selectedTime, maxTime, minTime, i) {\n  return selectedTime.hours > maxTime.hours || selectedTime.hours < minTime.hours || selectedTime.hours === maxTime.hours && i > maxTime.minutes || selectedTime.hours === minTime.hours && i < minTime.minutes;\n}; // sane defaults\n\n\nvar MIN_TIME = {\n  hours: 0,\n  minutes: 0\n};\nvar MAX_TIME = {\n  hours: 23,\n  minutes: 59\n};\nvar MINUTES_INTERVAL = 30;\n/**\r\n * TimePicker React Component\r\n */\n\nvar TimePicker = /*#__PURE__*/React__default.forwardRef(function (_ref2, ref) {\n  var onChange = _ref2.onChange,\n      selected = _ref2.selected,\n      _ref2$minTime = _ref2.minTime,\n      minTime = _ref2$minTime === void 0 ? MIN_TIME : _ref2$minTime,\n      _ref2$maxTime = _ref2.maxTime,\n      maxTime = _ref2$maxTime === void 0 ? MAX_TIME : _ref2$maxTime,\n      _ref2$minutesInterval = _ref2.minutesInterval,\n      minutesInterval = _ref2$minutesInterval === void 0 ? MINUTES_INTERVAL : _ref2$minutesInterval,\n      className = _ref2.className,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded$1);\n\n  if (typeof minutesInterval !== 'number' && minutesInterval < 1 && Number.isInteger(minutesInterval)) {\n    throw new Error('minutesInterval must be an integer greater than 0');\n  }\n\n  var _React$useState = React__default.useState(function () {\n    if (selected !== undefined) {\n      return alignTime(selected, minutesInterval);\n    }\n\n    var d = new Date();\n    return alignTime({\n      hours: d.getHours(),\n      minutes: d.getMinutes()\n    }, minutesInterval);\n  }),\n      selectedTime = _React$useState[0],\n      setSelectedTime = _React$useState[1];\n\n  var handleMinutesChange = React__default.useCallback(function (v) {\n    setSelectedTime(function (t) {\n      if (t.hours === maxTime.hours && Number(v) > maxTime.minutes) {\n        return alignTime(_extends({}, t, {\n          minutes: maxTime.minutes\n        }), minutesInterval);\n      } else if (t.hours === minTime.hours && Number(v) < minTime.minutes) {\n        return alignTime(_extends({}, t, {\n          minutes: minTime.minutes\n        }), minutesInterval, false);\n      } else {\n        return alignTime(_extends({}, t, {\n          minutes: Number(v)\n        }), minutesInterval);\n      }\n    });\n  }, [minutesInterval, maxTime, minTime]);\n  var handleHoursChange = React__default.useCallback(function (v) {\n    setSelectedTime(function (t) {\n      var h = Number(v);\n\n      if (h === minTime.hours && t.minutes < minTime.minutes) {\n        return alignTime({\n          hours: h,\n          minutes: minTime.minutes\n        }, minutesInterval, false);\n      } else if (h === maxTime.hours && t.minutes > maxTime.minutes) {\n        return alignTime({\n          hours: h,\n          minutes: maxTime.minutes\n        }, minutesInterval);\n      } else {\n        return alignTime(_extends({}, t, {\n          hours: h\n        }), minutesInterval);\n      }\n    });\n  }, [minutesInterval, maxTime, minTime]); // the array of options for the minutes to select from\n\n  var minuteOptions = React__default.useMemo(function () {\n    var options = [];\n\n    for (var i = 0; i < 60; i += minutesInterval) {\n      options.push({\n        value: [i.toString(), i.toString().padStart(2, '0')],\n        disabled: isMinuteOptionDisabled(selectedTime, maxTime, minTime, i)\n      });\n    }\n\n    return options; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [minutesInterval, maxTime, minTime, selectedTime.hours]);\n  var hourOptions = React__default.useMemo(function () {\n    var options = [];\n\n    for (var i = 0; i <= 23; i++) {\n      options.push({\n        value: [i.toString(), i.toString().padStart(2, '0')],\n        disabled: minTime.hours > i || maxTime.hours < i\n      });\n    }\n\n    return options;\n  }, [maxTime, minTime]);\n  React__default.useEffect(function () {\n    onChange == null ? void 0 : onChange(selectedTime);\n  }, [selectedTime, onChange]);\n  React__default.useEffect(function () {\n    var updatedTime = alignTime(selectedTime, minutesInterval);\n    setSelectedTime(updatedTime);\n    onChange == null ? void 0 : onChange(updatedTime); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [minutesInterval]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"stp \" + (className != null ? className : '')\n  }, props, {\n    ref: ref\n  }), React__default.createElement(CustomSelect, {\n    className: \"stp--select stp--select__hours\",\n    value: selectedTime.hours.toString().padStart(2, '0'),\n    onChange: handleHoursChange,\n    options: hourOptions\n  }), React__default.createElement(\"p\", null, \":\"), React__default.createElement(CustomSelect, {\n    className: \"stp--select stp--select__minutes\",\n    value: selectedTime.minutes.toString().padStart(2, '0'),\n    onChange: handleMinutesChange,\n    options: minuteOptions\n  }));\n});\nTimePicker.displayName = 'TimePicker';\nexport default DatePicker;\nexport { TimePicker };","map":{"version":3,"mappings":"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","names":["MONTHS","getMonthNameFromNumber","month","Error","getDatesOfMonth","date","firstDayOfMonth","Date","getFullYear","getMonth","lastDayOfMonth","firstDayOfMonthWeekDay","getDay","lastDayOfMonthWeekDay","previousMonth","previousMonthLastDay","nextMonth","dates","i","push","d","getDate","active","MonthPicker","year","prevMonth","React","className","onClick","type","xmlns","width","height","fill","viewBox","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","tabIndex","dateOptions","weekday","day","DateButton","selected","toLocaleDateString","p","n","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","DatePicker","forwardRef","onChange","_ref$selected","minDate","_ref$minDate","maxDate","props","minDateVal","getTime","maxDateVal","Number","POSITIVE_INFINITY","useState","monthDate","setMonthDate","selectedDate","setSelectedDate","useCallback","m","y","setNewSelectedDate","map","dVal","key","toDateString","displayName","CustomOption","value","label","disabled","useRef","useEffect","current","scrollIntoView","CustomSelect","options","children","isOpen","setIsOpen","openOptionsDropdown","closeOptionsDropdown","handleOptionSelect","v","Children","toArray","some","c","clickListener","e","_ref$current","contains","target","addEventListener","removeEventListener","onFocus","alignTime","interval","lower","hours","minutes","isMinuteOptionDisabled","selectedTime","maxTime","minTime","MIN_TIME","MAX_TIME","MINUTES_INTERVAL","TimePicker","minutesInterval","isInteger","undefined","getHours","getMinutes","setSelectedTime","handleMinutesChange","t","handleHoursChange","h","minuteOptions","useMemo","toString","padStart","hourOptions","updatedTime"],"sources":["C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\util.ts","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\date-picker\\month-picker.tsx","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\date-picker\\date-button.tsx","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\node_modules\\style-inject\\dist\\style-inject.es.js","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\date-picker\\index.tsx","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\time-picker\\custom-option.tsx","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\time-picker\\custom-select.tsx","C:\\Users\\lucas\\OneDrive\\Documentos\\GitHub\\API-FrontEnd\\node_modules\\sassy-datepicker\\src\\time-picker\\index.tsx"],"sourcesContent":["const MONTHS: { [key: number]: string } = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n\nexport const getMonthNameFromNumber = (month: number): string => {\n  if (month < 0 || month > 11) {\n    throw new Error(`Invalid month number: ${month}`);\n  }\n  return MONTHS[month];\n};\n\nexport const getDatesOfMonth = (date: Date): { d: Date; active: boolean }[] => {\n  // generate dates of each week of the month including the residue dates\n  // of the last week of previous month and first week of next month\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  const firstDayOfMonthWeekDay = firstDayOfMonth.getDay();\n  const lastDayOfMonthWeekDay = lastDayOfMonth.getDay();\n\n  const previousMonth = new Date(date.getFullYear(), date.getMonth(), 0);\n  const previousMonthLastDay = new Date(\n    previousMonth.getFullYear(),\n    previousMonth.getMonth() + 1,\n    0\n  );\n\n  const nextMonth = new Date(date.getFullYear(), date.getMonth() + 2, 0);\n\n  const dates: { d: Date; active: boolean }[] = [];\n\n  for (let i = 0; i < firstDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(\n        previousMonth.getFullYear(),\n        previousMonth.getMonth(),\n        previousMonthLastDay.getDate() - firstDayOfMonthWeekDay + i + 1\n      ),\n      active: false,\n    });\n  }\n\n  for (let i = 0; i < lastDayOfMonth.getDate(); i++) {\n    dates.push({\n      d: new Date(date.getFullYear(), date.getMonth(), i + 1),\n      active: true,\n    });\n  }\n\n  for (let i = 0; i < 6 - lastDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(nextMonth.getFullYear(), nextMonth.getMonth(), i + 1),\n      active: false,\n    });\n  }\n\n  return dates;\n};\n","import React from 'react';\nimport { getMonthNameFromNumber } from '../util';\n\nexport type MonthPickerProps = {\n  month: number;\n  year: number;\n  nextMonth: () => void;\n  prevMonth: () => void;\n};\n\nconst MonthPicker: React.FC<MonthPickerProps> = ({\n  month,\n  year,\n  nextMonth,\n  prevMonth,\n}) => {\n  return (\n    <div className=\"sdp--month-picker\">\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={prevMonth}\n        aria-label=\"Go to previous month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"160 208 80 128 160 48\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n      <p\n        className=\"sdp--text sdp--month-name\"\n        aria-label={`${getMonthNameFromNumber(\n          month\n        )} ${year} is currently open in Date Picker`}\n        tabIndex={0}\n      >\n        {getMonthNameFromNumber(month)} {year}\n      </p>\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={nextMonth}\n        aria-label=\"Go to next month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"96 48 176 128 96 208\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default MonthPicker;\n","import * as React from 'react';\n\ntype DateButtonProps = {\n  date: Date;\n  active: boolean;\n  selected: boolean;\n  onClick: (date: Date) => void;\n};\n\nconst dateOptions: Intl.DateTimeFormatOptions = {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n};\n\nconst DateButton: React.FC<DateButtonProps> = ({\n  date,\n  active,\n  onClick,\n  selected,\n}) => (\n  <button\n    className={`sdp--square-btn sdp--date-btn ${\n      selected ? 'sdp--date-btn__selected' : ''\n    } sdp--text ${!active ? 'sdp--text__inactive' : ''}`}\n    onClick={() => onClick(date)}\n    tabIndex={active ? 0 : -1}\n    aria-label={`${\n      selected ? 'Currently selected' : 'Select'\n    } ${date.toLocaleDateString('en-US', dateOptions)}`}\n    type=\"button\"\n  >\n    {date.getDate()}\n  </button>\n);\n\nexport default React.memo(\n  DateButton,\n  (p, n) =>\n    p.date.getDay() === n.date.getDay() &&\n    p.active === n.active &&\n    p.selected === n.selected\n);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\n\nimport MonthPicker from './month-picker';\nimport DateButton from './date-button';\nimport { getDatesOfMonth } from '../util';\n\nimport './styles.css';\n\nexport type DatePickerProps = {\n  /**\n   * This function is called when the selected date is changed.\n   */\n  onChange?: (date: Date) => void;\n  /**\n   * The selected date.\n   */\n  selected?: Date;\n  /**\n   * The minimum date that can be selected (inclusive).\n   */\n  minDate?: Date;\n  /**\n   * The maximum date that can be selected (inclusive).\n   */\n  maxDate?: Date;\n} & React.PropsWithRef<\n  Omit<React.HTMLProps<HTMLDivElement>, 'onChange' | 'selected'>\n>;\n\nconst DatePicker = React.forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      onChange,\n      selected = new Date(),\n      minDate = new Date(1900, 0, 1),\n      maxDate,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const minDateVal = minDate.getTime();\n    const maxDateVal =\n      typeof maxDate === 'undefined'\n        ? Number.POSITIVE_INFINITY\n        : maxDate.getTime();\n\n    const [monthDate, setMonthDate] = React.useState<Date>(selected);\n    const [selectedDate, setSelectedDate] = React.useState<Date>(selected);\n\n    const nextMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 11) {\n            return new Date(y + 1, 0);\n          } else {\n            return new Date(y, m + 1);\n          }\n        }),\n      []\n    );\n\n    const prevMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 0) {\n            return new Date(y - 1, 11);\n          } else {\n            return new Date(y, m - 1);\n          }\n        }),\n      []\n    );\n\n    const setNewSelectedDate = React.useCallback(\n      (date: Date) => {\n        setSelectedDate(date);\n        onChange?.(date);\n      },\n      [onChange, setSelectedDate]\n    );\n\n    // TODO: arrow-keys navigation\n    return (\n      <div\n        className={`sdp ${className ?? ''}`}\n        aria-label=\"Date Picker\"\n        tabIndex={0}\n        ref={ref}\n        {...props}\n      >\n        <MonthPicker\n          month={monthDate.getMonth()}\n          year={monthDate.getFullYear()}\n          nextMonth={nextMonth}\n          prevMonth={prevMonth}\n        />\n        <div className=\"sdp--dates-grid\">\n          <p className=\"sdp--text sdp--text__inactive\">Su</p>\n          <p className=\"sdp--text sdp--text__inactive\">Mo</p>\n          <p className=\"sdp--text sdp--text__inactive\">Tu</p>\n          <p className=\"sdp--text sdp--text__inactive\">We</p>\n          <p className=\"sdp--text sdp--text__inactive\">Th</p>\n          <p className=\"sdp--text sdp--text__inactive\">Fr</p>\n          <p className=\"sdp--text sdp--text__inactive\">Sa</p>\n          {getDatesOfMonth(monthDate).map(({ d, active }) => {\n            const dVal = d.getTime();\n\n            return (\n              <DateButton\n                key={dVal}\n                date={d}\n                active={dVal >= minDateVal && dVal <= maxDateVal && active}\n                selected={selectedDate.toDateString() === d.toDateString()}\n                onClick={setNewSelectedDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n);\n\nDatePicker.displayName = 'DatePicker';\n\nexport default DatePicker;\n","import React from 'react';\n\ntype CustomOptionProps = {\n  /**\n   * If the option is currently selected.\n   */\n  selected: boolean;\n  /**\n   * The label to display for the option.\n   */\n  label: string;\n  /**\n   * The value of the option.\n   */\n  value: string;\n  /**\n   * A callback triggered when the option is clicked.\n   */\n  onClick: (v: string) => void;\n  /**\n   * If the option is disabled.\n   */\n  disabled: boolean;\n};\n\n/**\n * Custom Option component.\n */\nconst CustomOption: React.FC<CustomOptionProps> = ({\n  selected,\n  value,\n  label,\n  onClick,\n  disabled,\n}) => {\n  const ref = React.useRef<HTMLButtonElement>(null);\n\n  React.useEffect(() => {\n    if (selected) {\n      ref.current?.scrollIntoView();\n    }\n  }, [selected]);\n\n  return (\n    <button\n      ref={ref}\n      className={`stp--option ${selected ? 'stp--option__active' : ''} ${\n        disabled ? 'stp--option__disabled' : ''\n      }`}\n      type=\"button\"\n      onClick={() => !disabled && onClick(value)}\n      key={value}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default CustomOption;\n","import React from 'react';\nimport CustomOption from './custom-option';\n\nexport type OptionType = {\n  value: string[];\n  disabled: boolean;\n};\n\ntype CustomSelectProps = {\n  /**\n   * The value of the select.\n   */\n  value: string;\n  /**\n   * A callback triggered whenever the value of the select changes.\n   */\n  onChange: (value: string) => void;\n  /**\n   * The options to display in the select.\n   *\n   * Format - [{value: [value, label], disabled: boolean}, ...]\n   */\n  options: OptionType[];\n} & Omit<\n  React.PropsWithChildren<React.HTMLProps<HTMLDivElement>>,\n  'onChange' | 'value'\n>;\n\n/**\n * A custom select component.\n *\n */\nconst CustomSelect: React.FC<CustomSelectProps> = ({\n  value,\n  options,\n  onChange,\n  children,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  const openOptionsDropdown = React.useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const closeOptionsDropdown = React.useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleOptionSelect = React.useCallback(\n    v => {\n      onChange(v);\n      closeOptionsDropdown();\n    },\n    [onChange, closeOptionsDropdown]\n  );\n\n  React.useEffect(() => {\n    if (React.Children.toArray(children).some(c => typeof c !== 'string')) {\n      throw new Error('time-picker: CustomSelect children must be strings');\n    }\n  }, [children]);\n\n  React.useEffect(() => {\n    const clickListener = (e: MouseEvent) => {\n      if (!ref.current?.contains(e.target as Node)) {\n        closeOptionsDropdown();\n      }\n    };\n\n    document.addEventListener('click', clickListener);\n\n    return () => document.removeEventListener('click', clickListener);\n  }, [closeOptionsDropdown]);\n\n  return (\n    <div className=\"stp--select__container\">\n      <div\n        ref={ref}\n        className=\"stp--select\"\n        tabIndex={0}\n        onClick={openOptionsDropdown}\n        onFocus={openOptionsDropdown}\n      >\n        {value}\n      </div>\n      {isOpen && (\n        <div className=\"stp--select__dropdown\">\n          {options.map(({ value: [v, label], disabled }) => (\n            <CustomOption\n              key={v}\n              selected={v === value}\n              value={v}\n              label={label}\n              onClick={handleOptionSelect}\n              disabled={disabled}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","import React from 'react';\nimport CustomSelect, { OptionType } from './custom-select';\n\nimport './styles.css';\n\n/**\n * Time type\n */\nexport type Time = {\n  hours: number;\n  minutes: number;\n};\n\n/**\n * Props for TimePicker React Component\n */\nexport type TimePickerProps = {\n  /**\n   * This function is called when the selected date is changed.\n   */\n  onChange?: (time: Time) => void;\n  /**\n   * The selected date.\n   */\n  selected?: Time;\n  /**\n   * The minimum time that can be selected - 0 to 23 (inclusive).\n   */\n  minTime?: Time;\n  /**\n   * The maximum time that can be selected - 0 to 23 (inclusive).\n   */\n  maxTime?: Time;\n  /**\n   * The number of minutes between each minute select option - default is 30\n   */\n  minutesInterval?: number;\n} & React.PropsWithRef<\n  Omit<React.HTMLProps<HTMLDivElement>, 'onChange' | 'selected'>\n>;\n\n/**\n *\n * @param time {Time} The time value\n * @param interval {number} The interval between each minute select option\n * @returns {Time} Time value rounded to the nearest interval\n */\nconst alignTime = (\n  { hours, minutes }: Time,\n  interval: number,\n  lower: boolean = true\n): Time => {\n  // round minutes to nearest interval\n  if (minutes % interval !== 0) {\n    minutes = lower\n      ? minutes - (minutes % interval)\n      : minutes + (minutes % interval);\n  }\n  return {\n    hours,\n    minutes,\n  };\n};\n\nconst isMinuteOptionDisabled = (\n  selectedTime: Time,\n  maxTime: Time,\n  minTime: Time,\n  i: number\n): boolean =>\n  selectedTime.hours > maxTime.hours ||\n  selectedTime.hours < minTime.hours ||\n  (selectedTime.hours === maxTime.hours && i > maxTime.minutes) ||\n  (selectedTime.hours === minTime.hours && i < minTime.minutes);\n\n// sane defaults\nconst MIN_TIME = { hours: 0, minutes: 0 };\nconst MAX_TIME = { hours: 23, minutes: 59 };\nconst MINUTES_INTERVAL = 30;\n\n/**\n * TimePicker React Component\n */\nconst TimePicker = React.forwardRef<HTMLDivElement, TimePickerProps>(\n  (\n    {\n      onChange,\n      selected,\n      minTime = MIN_TIME,\n      maxTime = MAX_TIME,\n      minutesInterval = MINUTES_INTERVAL,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    if (\n      typeof minutesInterval !== 'number' &&\n      minutesInterval < 1 &&\n      Number.isInteger(minutesInterval)\n    ) {\n      throw new Error('minutesInterval must be an integer greater than 0');\n    }\n\n    const [selectedTime, setSelectedTime] = React.useState(() => {\n      if (selected !== undefined) {\n        return alignTime(selected, minutesInterval);\n      }\n      const d = new Date();\n      return alignTime(\n        { hours: d.getHours(), minutes: d.getMinutes() },\n        minutesInterval\n      );\n    });\n\n    const handleMinutesChange = React.useCallback(\n      (v: string) => {\n        setSelectedTime(t => {\n          if (t.hours === maxTime.hours && Number(v) > maxTime.minutes) {\n            return alignTime(\n              { ...t, minutes: maxTime.minutes },\n              minutesInterval\n            );\n          } else if (t.hours === minTime.hours && Number(v) < minTime.minutes) {\n            return alignTime(\n              { ...t, minutes: minTime.minutes },\n              minutesInterval,\n              false\n            );\n          } else {\n            return alignTime({ ...t, minutes: Number(v) }, minutesInterval);\n          }\n        });\n      },\n      [minutesInterval, maxTime, minTime]\n    );\n\n    const handleHoursChange = React.useCallback(\n      (v: string) => {\n        setSelectedTime(t => {\n          const h = Number(v);\n          if (h === minTime.hours && t.minutes < minTime.minutes) {\n            return alignTime(\n              { hours: h, minutes: minTime.minutes },\n              minutesInterval,\n              false\n            );\n          } else if (h === maxTime.hours && t.minutes > maxTime.minutes) {\n            return alignTime(\n              { hours: h, minutes: maxTime.minutes },\n              minutesInterval\n            );\n          } else {\n            return alignTime({ ...t, hours: h }, minutesInterval);\n          }\n        });\n      },\n      [minutesInterval, maxTime, minTime]\n    );\n\n    // the array of options for the minutes to select from\n    const minuteOptions = React.useMemo<OptionType[]>(() => {\n      let options: OptionType[] = [];\n      for (let i = 0; i < 60; i += minutesInterval) {\n        options.push({\n          value: [i.toString(), i.toString().padStart(2, '0')],\n          disabled: isMinuteOptionDisabled(selectedTime, maxTime, minTime, i),\n        });\n      }\n      return options;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [minutesInterval, maxTime, minTime, selectedTime.hours]);\n\n    const hourOptions = React.useMemo<OptionType[]>(() => {\n      let options: OptionType[] = [];\n      for (let i = 0; i <= 23; i++) {\n        options.push({\n          value: [i.toString(), i.toString().padStart(2, '0')],\n          disabled: minTime.hours > i || maxTime.hours < i,\n        });\n      }\n      return options;\n    }, [maxTime, minTime]);\n\n    React.useEffect(() => {\n      onChange?.(selectedTime);\n    }, [selectedTime, onChange]);\n\n    React.useEffect(() => {\n      const updatedTime = alignTime(selectedTime, minutesInterval);\n      setSelectedTime(updatedTime);\n      onChange?.(updatedTime);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [minutesInterval]);\n\n    return (\n      <div className={`stp ${className ?? ''}`} {...props} ref={ref}>\n        <CustomSelect\n          className=\"stp--select stp--select__hours\"\n          value={selectedTime.hours.toString().padStart(2, '0')}\n          onChange={handleHoursChange}\n          options={hourOptions}\n        />\n        <p>:</p>\n        <CustomSelect\n          className=\"stp--select stp--select__minutes\"\n          value={selectedTime.minutes.toString().padStart(2, '0')}\n          onChange={handleMinutesChange}\n          options={minuteOptions}\n        />\n      </div>\n    );\n  }\n);\n\nTimePicker.displayName = 'TimePicker';\n\nexport default TimePicker;\n"]},"metadata":{},"sourceType":"module"}